{"version":3,"sources":["webpack:///./node_modules/date-and-time/esm/date-and-time.es.js"],"names":["localized_proto","date","locales","plugins","lang","_res","MMMM","MMM","dddd","ddd","dd","A","_formatter","YYYY","d","getFullYear","slice","YY","Y","this","res","getMonth","MM","M","DD","getDate","D","HH","getHours","H","hh","h","mm","getMinutes","m","ss","getSeconds","s","SSS","getMilliseconds","SS","S","getDay","Z","offset","getTimezoneOffset","Math","abs","post","str","_parser","exec","result","find","value","h12","a","re","length","array","item","index","i","len","indexOf","pre","extend","base","props","override","key","obj","proto","compile","formatString","keys","pattern","format","dateObj","arg","utc","ctx","addMinutes","formatter","token","replace","preparse","dateString","dt","_index","_length","_match","comment","parser","charAt","test","parse","isValid","Date","UTC","NaN","arg1","arg2","last","isLeapYear","transform","addYears","years","addMonths","months","getTime","setMonth","addDays","days","setDate","addHours","hours","minutes","addSeconds","seconds","addMilliseconds","milliseconds","subtract","date1","date2","delta","toMilliseconds","toSeconds","toMinutes","toHours","toDays","y","isSameDay","toDateString","locale","code","plugin","name","install","extension","extender","date$1"],"mappings":"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","file":"js/npm.date-and-time.94814d93.js","sourcesContent":["/**\n * @preserve date-and-time (c) KNOWLEDGECODE | MIT\n */\n\nvar locales = {},\n    plugins = {},\n    lang = 'en',\n    _res = {\n        MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        dddd: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n        A: ['AM', 'PM']\n    },\n    _formatter = {\n        YYYY: function (d/*, formatString*/) { return ('000' + d.getFullYear()).slice(-4); },\n        YY: function (d/*, formatString*/) { return ('0' + d.getFullYear()).slice(-2); },\n        Y: function (d/*, formatString*/) { return '' + d.getFullYear(); },\n        MMMM: function (d/*, formatString*/) { return this.res.MMMM[d.getMonth()]; },\n        MMM: function (d/*, formatString*/) { return this.res.MMM[d.getMonth()]; },\n        MM: function (d/*, formatString*/) { return ('0' + (d.getMonth() + 1)).slice(-2); },\n        M: function (d/*, formatString*/) { return '' + (d.getMonth() + 1); },\n        DD: function (d/*, formatString*/) { return ('0' + d.getDate()).slice(-2); },\n        D: function (d/*, formatString*/) { return '' + d.getDate(); },\n        HH: function (d/*, formatString*/) { return ('0' + d.getHours()).slice(-2); },\n        H: function (d/*, formatString*/) { return '' + d.getHours(); },\n        A: function (d/*, formatString*/) { return this.res.A[d.getHours() > 11 | 0]; },\n        hh: function (d/*, formatString*/) { return ('0' + (d.getHours() % 12 || 12)).slice(-2); },\n        h: function (d/*, formatString*/) { return '' + (d.getHours() % 12 || 12); },\n        mm: function (d/*, formatString*/) { return ('0' + d.getMinutes()).slice(-2); },\n        m: function (d/*, formatString*/) { return '' + d.getMinutes(); },\n        ss: function (d/*, formatString*/) { return ('0' + d.getSeconds()).slice(-2); },\n        s: function (d/*, formatString*/) { return '' + d.getSeconds(); },\n        SSS: function (d/*, formatString*/) { return ('00' + d.getMilliseconds()).slice(-3); },\n        SS: function (d/*, formatString*/) { return ('0' + (d.getMilliseconds() / 10 | 0)).slice(-2); },\n        S: function (d/*, formatString*/) { return '' + (d.getMilliseconds() / 100 | 0); },\n        dddd: function (d/*, formatString*/) { return this.res.dddd[d.getDay()]; },\n        ddd: function (d/*, formatString*/) { return this.res.ddd[d.getDay()]; },\n        dd: function (d/*, formatString*/) { return this.res.dd[d.getDay()]; },\n        Z: function (d/*, formatString*/) {\n            var offset = d.getTimezoneOffset() / 0.6 | 0;\n            return (offset > 0 ? '-' : '+') + ('000' + Math.abs(offset - (offset % 100 * 0.4 | 0))).slice(-4);\n        },\n        post: function (str) { return str; },\n        res: _res\n    },\n    _parser = {\n        YYYY: function (str/*, formatString */) { return this.exec(/^\\d{4}/, str); },\n        Y: function (str/*, formatString */) { return this.exec(/^\\d{1,4}/, str); },\n        MMMM: function (str/*, formatString */) {\n            var result = this.find(this.res.MMMM, str);\n            result.value++;\n            return result;\n        },\n        MMM: function (str/*, formatString */) {\n            var result = this.find(this.res.MMM, str);\n            result.value++;\n            return result;\n        },\n        MM: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        M: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        DD: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        D: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        HH: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        H: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        A: function (str/*, formatString */) { return this.find(this.res.A, str); },\n        hh: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        h: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        mm: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        m: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        ss: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n        s: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n        SSS: function (str/*, formatString */) { return this.exec(/^\\d{1,3}/, str); },\n        SS: function (str/*, formatString */) {\n            var result = this.exec(/^\\d\\d?/, str);\n            result.value *= 10;\n            return result;\n        },\n        S: function (str/*, formatString */) {\n            var result = this.exec(/^\\d/, str);\n            result.value *= 100;\n            return result;\n        },\n        Z: function (str/*, formatString */) {\n            var result = this.exec(/^[\\+-]\\d{2}[0-5]\\d/, str);\n            result.value = (result.value / 100 | 0) * -60 - result.value % 100;\n            return result;\n        },\n        h12: function (h, a) { return (h === 12 ? 0 : h) + a * 12; },\n        exec: function (re, str) {\n            var result = (re.exec(str) || [''])[0];\n            return { value: result | 0, length: result.length };\n        },\n        find: function (array, str) {\n            var index = -1, length = 0;\n\n            for (var i = 0, len = array.length, item; i < len; i++) {\n                item = array[i];\n                if (!str.indexOf(item) && item.length > length) {\n                    index = i;\n                    length = item.length;\n                }\n            }\n            return { value: index, length: length };\n        },\n        pre: function (str) { return str; },\n        res: _res\n    },\n    extend = function (base, props, override, res) {\n        var obj = {}, key;\n\n        for (key in base) {\n            obj[key] = base[key];\n        }\n        for (key in props || {}) {\n            if (!(!!override ^ !!obj[key])) {\n                obj[key] = props[key];\n            }\n        }\n        if (res) {\n            obj.res = res;\n        }\n        return obj;\n    },\n    proto = {\n        _formatter: _formatter,\n        _parser: _parser\n    },\n    localized_proto,\n    date;\n\n/**\n * Compiling a format string\n * @param {string} formatString - a format string\n * @returns {Array.<string>} a compiled object\n */\nproto.compile = function (formatString) {\n    var re = /\\[([^\\[\\]]|\\[[^\\[\\]]*])*]|([A-Za-z])\\2+|\\.{3}|./g, keys, pattern = [formatString];\n\n    while ((keys = re.exec(formatString))) {\n        pattern[pattern.length] = keys[0];\n    }\n    return pattern;\n};\n\n/**\n * Formatting a Date and Time\n * @param {Date} dateObj - a Date object\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\nproto.format = function (dateObj, arg, utc) {\n    var ctx = this || date, pattern = typeof arg === 'string' ? ctx.compile(arg) : arg,\n        offset = dateObj.getTimezoneOffset(),\n        d = ctx.addMinutes(dateObj, utc ? offset : 0),\n        formatter = ctx._formatter, str = '';\n\n    d.getTimezoneOffset = function () { return utc ? 0 : offset; };\n    for (var i = 1, len = pattern.length, token; i < len; i++) {\n        token = pattern[i];\n        str += formatter[token] ? formatter.post(formatter[token](d, pattern[0])) : token.replace(/\\[(.*)]/, '$1');\n    }\n    return str;\n};\n\n/**\n * Pre-parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @returns {Object} a date structure\n */\nproto.preparse = function (dateString, arg) {\n    var ctx = this || date, pattern = typeof arg === 'string' ? ctx.compile(arg) : arg,\n        dt = { Y: 1970, M: 1, D: 1, H: 0, A: 0, h: 0, m: 0, s: 0, S: 0, Z: 0, _index: 0, _length: 0, _match: 0 },\n        comment = /\\[(.*)]/, parser = ctx._parser, offset = 0;\n\n    dateString = parser.pre(dateString);\n    for (var i = 1, len = pattern.length, token, result; i < len; i++) {\n        token = pattern[i];\n        if (parser[token]) {\n            result = parser[token](dateString.slice(offset), pattern[0]);\n            if (!result.length) {\n                break;\n            }\n            offset += result.length;\n            dt[result.token || token.charAt(0)] = result.value;\n            dt._match++;\n        } else if (token === dateString.charAt(offset) || token === ' ') {\n            offset++;\n        } else if (comment.test(token) && !dateString.slice(offset).indexOf(comment.exec(token)[1])) {\n            offset += token.length - 2;\n        } else if (token === '...') {\n            offset = dateString.length;\n            break;\n        } else {\n            break;\n        }\n    }\n    dt.H = dt.H || parser.h12(dt.h, dt.A);\n    dt._index = offset;\n    dt._length = dateString.length;\n    return dt;\n};\n\n/**\n * Parsing a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg - a format string or its compiled object\n * @param {boolean} [utc] - input as UTC\n * @returns {Date} a constructed date\n */\nproto.parse = function (dateString, arg, utc) {\n    var ctx = this || date, dt = ctx.preparse(dateString, arg);\n\n    if (ctx.isValid(dt)) {\n        dt.M -= dt.Y < 100 ? 22801 : 1; // 22801 = 1900 * 12 + 1\n        if (utc || dt.Z) {\n            return new Date(Date.UTC(dt.Y, dt.M, dt.D, dt.H, dt.m + dt.Z, dt.s, dt.S));\n        }\n        return new Date(dt.Y, dt.M, dt.D, dt.H, dt.m, dt.s, dt.S);\n    }\n    return new Date(NaN);\n};\n\n/**\n * Validation\n * @param {Object|string} arg1 - a date structure or a date string\n * @param {string|Array.<string>} [arg2] - a format string or its compiled object\n * @returns {boolean} whether the date string is a valid date\n */\nproto.isValid = function (arg1, arg2) {\n    var ctx = this || date, dt = typeof arg1 === 'string' ? ctx.preparse(arg1, arg2) : arg1,\n        last = [31, 28 + ctx.isLeapYear(dt.Y) | 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][dt.M - 1];\n\n    return !(\n        dt._index < 1 || dt._length < 1 || dt._index - dt._length || dt._match < 1 ||\n        dt.Y < 1 || dt.Y > 9999 || dt.M < 1 || dt.M > 12 || dt.D < 1 || dt.D > last ||\n        dt.H < 0 || dt.H > 23 || dt.m < 0 || dt.m > 59 || dt.s < 0 || dt.s > 59 || dt.S < 0 || dt.S > 999 ||\n        dt.Z < -840 || dt.Z > 720\n    );\n};\n\n/**\n * Transforming a Date and Time string\n * @param {string} dateString - a date string\n * @param {string|Array.<string>} arg1 - a format string or its compiled object\n * @param {string|Array.<string>} arg2 - a transformed format string or its compiled object\n * @param {boolean} [utc] - output as UTC\n * @returns {string} a formatted string\n */\nproto.transform = function (dateString, arg1, arg2, utc) {\n    const ctx = this || date;\n    return ctx.format(ctx.parse(dateString, arg1), arg2, utc);\n};\n\n/**\n * Adding years\n * @param {Date} dateObj - a date object\n * @param {number} years - number of years to add\n * @returns {Date} a date after adding the value\n */\nproto.addYears = function (dateObj, years) {\n    return (this || date).addMonths(dateObj, years * 12);\n};\n\n/**\n * Adding months\n * @param {Date} dateObj - a date object\n * @param {number} months - number of months to add\n * @returns {Date} a date after adding the value\n */\nproto.addMonths = function (dateObj, months) {\n    var d = new Date(dateObj.getTime());\n\n    d.setMonth(d.getMonth() + months);\n    return d;\n};\n\n/**\n * Adding days\n * @param {Date} dateObj - a date object\n * @param {number} days - number of days to add\n * @returns {Date} a date after adding the value\n */\nproto.addDays = function (dateObj, days) {\n    var d = new Date(dateObj.getTime());\n\n    d.setDate(d.getDate() + days);\n    return d;\n};\n\n/**\n * Adding hours\n * @param {Date} dateObj - a date object\n * @param {number} hours - number of hours to add\n * @returns {Date} a date after adding the value\n */\nproto.addHours = function (dateObj, hours) {\n    return (this || date).addMinutes(dateObj, hours * 60);\n};\n\n/**\n * Adding minutes\n * @param {Date} dateObj - a date object\n * @param {number} minutes - number of minutes to add\n * @returns {Date} a date after adding the value\n */\nproto.addMinutes = function (dateObj, minutes) {\n    return (this || date).addSeconds(dateObj, minutes * 60);\n};\n\n/**\n * Adding seconds\n * @param {Date} dateObj - a date object\n * @param {number} seconds - number of seconds to add\n * @returns {Date} a date after adding the value\n */\nproto.addSeconds = function (dateObj, seconds) {\n    return (this || date).addMilliseconds(dateObj, seconds * 1000);\n};\n\n/**\n * Adding milliseconds\n * @param {Date} dateObj - a date object\n * @param {number} milliseconds - number of milliseconds to add\n * @returns {Date} a date after adding the value\n */\nproto.addMilliseconds = function (dateObj, milliseconds) {\n    return new Date(dateObj.getTime() + milliseconds);\n};\n\n/**\n * Subtracting two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {Object} a result object subtracting date2 from date1\n */\nproto.subtract = function (date1, date2) {\n    var delta = date1.getTime() - date2.getTime();\n\n    return {\n        toMilliseconds: function () {\n            return delta;\n        },\n        toSeconds: function () {\n            return delta / 1000;\n        },\n        toMinutes: function () {\n            return delta / 60000;\n        },\n        toHours: function () {\n            return delta / 3600000;\n        },\n        toDays: function () {\n            return delta / 86400000;\n        }\n    };\n};\n\n/**\n * Whether year is leap year\n * @param {number} y - year\n * @returns {boolean} whether year is leap year\n */\nproto.isLeapYear = function (y) {\n    return (!(y % 4) && !!(y % 100)) || !(y % 400);\n};\n\n/**\n * Comparison of two dates\n * @param {Date} date1 - a Date object\n * @param {Date} date2 - a Date object\n * @returns {boolean} whether the two dates are the same day (time is ignored)\n */\nproto.isSameDay = function (date1, date2) {\n    return date1.toDateString() === date2.toDateString();\n};\n\n/**\n * Defining new locale\n * @param {string} code - language code\n * @param {Function} locale - locale installer\n * @returns {string} current language code\n */\nproto.locale = function (code, locale) {\n    if (!locales[code]) {\n        locales[code] = locale;\n    }\n};\n\n/**\n * Defining new plugin\n * @param {string} name - plugin name\n * @param {Function} plugin - plugin installer\n * @returns {void}\n */\nproto.plugin = function (name, plugin) {\n    if (!plugins[name]) {\n        plugins[name] = plugin;\n    }\n};\n\nlocalized_proto = extend(proto);\ndate = extend(proto);\n\n/**\n * Changing locale\n * @param {Function|string} [locale] - locale object | language code\n * @returns {string} current language code\n */\ndate.locale = function (locale) {\n    var install = typeof locale === 'function' ? locale : date.locale[locale];\n\n    if (!install) {\n        return lang;\n    }\n    lang = install(proto);\n\n    var extension = locales[lang] || {};\n    var res = extend(_res, extension.res, true);\n    var formatter = extend(_formatter, extension.formatter, true, res);\n    var parser = extend(_parser, extension.parser, true, res);\n\n    date._formatter = localized_proto._formatter = formatter;\n    date._parser = localized_proto._parser = parser;\n\n    for (var plugin in plugins) {\n        date.extend(plugins[plugin]);\n    }\n\n    return lang;\n};\n\n/**\n * Feature extension\n * @param {Object} extension - extension object\n * @returns {void}\n */\ndate.extend = function (extension) {\n    var res = extend(date._parser.res, extension.res);\n    var extender = extension.extender || {};\n\n    date._formatter = extend(date._formatter, extension.formatter, false, res);\n    date._parser = extend(date._parser, extension.parser, false, res);\n\n    for (var key in extender) {\n        if (!date[key]) {\n            date[key] = extender[key];\n        }\n    }\n};\n\n/**\n * Importing plugin\n * @param {Function|string} plugin - plugin object | plugin name\n * @returns {void}\n */\ndate.plugin = function (plugin) {\n    var install = typeof plugin === 'function' ? plugin : date.plugin[plugin];\n\n    if (install) {\n        date.extend(plugins[install(proto, localized_proto)] || {});\n    }\n};\n\nvar date$1 = date;\n\nexport { date$1 as default };\n"],"sourceRoot":""}